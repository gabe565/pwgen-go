version: 2
project_name: pwgen-go
before:
  hooks:
    - go run ./internal/generate/completions --date={{ .CommitDate }}
    - go run ./internal/generate/manpages --version={{ .Version }} --date={{ .CommitDate }}
builds:
  - binary: pwgen
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.version={{.Version}}
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - "7"
    mod_timestamp: "{{.CommitTimestamp}}"
archives:
  - formats: tar.gz
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: zip
    files:
      - LICENSE
      - README.md
      - manpages/*
      - completions/*
checksum:
  name_template: "checksums.txt"
snapshot:
  version_template: "{{ incpatch .Version }}-beta"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs'
      - '^test'
  groups:
    - title: Breaking Changes
      order: 0
      regexp: '\)!:'
    - title: Features
      order: 0
      regexp: "(feat)"
    - title: Fixes
      order: 1
      regexp: "(fix|perf)"
    - title: Dependencies
      order: 999
      regexp: "\\(deps\\):"
    - title: Others
      order: 998
brews:
  - homepage: https://github.com/gabe565/pwgen-go
    description: Command line passphrase generator written in Go
    license: MIT
    repository:
      owner: gabe565
      name: homebrew-tap
    directory: Formula
    install: |
      bin.install "pwgen"
      man1.install "manpages/pwgen.1.gz"
      bash_completion.install "completions/pwgen.bash" => "pwgen"
      zsh_completion.install "completions/pwgen.zsh" => "_pwgen"
      fish_completion.install "completions/pwgen.fish"
nfpms:
  - id: packages
    vendor: Gabe Cook
    homepage: https://github.com/gabe565/pwgen-go
    description: Command line passphrase generator written in Go
    license: MIT
    maintainer: Gabe Cook <gabe565@gmail.com>
    formats:
      - deb
      - rpm
    contents:
      - src: ./manpages/
        dst: /usr/share/man/man1
        file_info:
          mode: 0644
      - src: ./completions/pwgen.bash
        dst: /usr/share/bash-completion/completions/pwgen
        file_info:
          mode: 0644
      - src: ./completions/pwgen.fish
        dst: /usr/share/fish/vendor_completions.d/pwgen.fish
        file_info:
          mode: 0644
      - src: ./completions/pwgen.zsh
        dst:  /usr/share/zsh/vendor-completions/_pwgen
        file_info:
          mode: 0644
publishers:
  - name: fury.io
    ids:
      - packages
    dir: "{{ dir .ArtifactPath }}"
    cmd: curl -sf -Fpackage=@{{ .ArtifactName }} https://{{ .Env.FURY_TOKEN }}@push.fury.io/gabe565/
aurs:
  - name: pwgen-go-bin
    homepage: https://github.com/gabe565/pwgen-go
    description: Command line passphrase generator written in Go
    maintainers:
      - Gabe Cook <gabe565@gmail.com>
    license: MIT
    private_key: '{{ .Env.AUR_SSH_KEY }}'
    git_url: ssh://aur@aur.archlinux.org/pwgen-go-bin.git
    skip_upload: auto
    package: |-
      # bin
      install -Dm755 "./pwgen" "${pkgdir}/usr/bin/pwgen"
      # license
      install -Dm644 "./LICENSE" "${pkgdir}/usr/share/licenses/pwgen/LICENSE"
      # man pages
      install -Dm644 "./manpages/pwgen.1.gz" "${pkgdir}/usr/share/man/man1/pwgen.1.gz"
      # completions
      install -Dm644 "./completions/pwgen.bash" "${pkgdir}/usr/share/bash-completion/completions/pwgen"
      install -Dm644 "./completions/pwgen.zsh" "${pkgdir}/usr/share/zsh/site-functions/_pwgen"
      install -Dm644 "./completions/pwgen.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/pwgen.fish"
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
dockers:
  - &dockers
    image_templates:
      - ghcr.io/gabe565/{{ .ProjectName }}:{{ .Version }}-amd64
    use: buildx
    dockerfile: goreleaser.Dockerfile
    build_flag_templates:
      - "--platform=linux/amd64"
  - <<: *dockers
    image_templates:
      - ghcr.io/gabe565/{{ .ProjectName }}:{{ .Version }}-armv7
    goarch: arm
    goarm: 7
    build_flag_templates:
      - "--platform=linux/arm/v7"
  - <<: *dockers
    image_templates:
      - ghcr.io/gabe565/{{ .ProjectName }}:{{ .Version }}-arm64v8
    goarch: arm64
    build_flag_templates:
      - "--platform=linux/arm64/v8"
docker_manifests:
  - &docker_manifests
    name_template: ghcr.io/gabe565/{{ .ProjectName }}:latest
    image_templates:
      - ghcr.io/gabe565/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/gabe565/{{ .ProjectName }}:{{ .Version }}-armv7
      - ghcr.io/gabe565/{{ .ProjectName }}:{{ .Version }}-arm64v8
  - <<: *docker_manifests
    name_template: ghcr.io/gabe565/{{ .ProjectName }}:{{ .Version }}
  - <<: *docker_manifests
    name_template: ghcr.io/gabe565/{{ .ProjectName }}:{{ .Major }}
  - <<: *docker_manifests
    name_template: ghcr.io/gabe565/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}
